/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

// DigitalTwinPlatformSpecApplyConfiguration represents an declarative configuration of the DigitalTwinPlatformSpec type for use
// with apply.
type DigitalTwinPlatformSpecApplyConfiguration struct {
	Parameters                 *ParametersApplyConfiguration                 `json:"parameters,omitempty"`
	CompositionSelector        *CompositionSelectorApplyConfiguration        `json:"compositionSelector,omitempty"`
	WriteConnectionSecretToRef *WriteConnectionSecretToRefApplyConfiguration `json:"writeConnectionSecretToRef,omitempty"`
}

// DigitalTwinPlatformSpecApplyConfiguration constructs an declarative configuration of the DigitalTwinPlatformSpec type for use with
// apply.
func DigitalTwinPlatformSpec() *DigitalTwinPlatformSpecApplyConfiguration {
	return &DigitalTwinPlatformSpecApplyConfiguration{}
}

// WithParameters sets the Parameters field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Parameters field is set to the value of the last call.
func (b *DigitalTwinPlatformSpecApplyConfiguration) WithParameters(value *ParametersApplyConfiguration) *DigitalTwinPlatformSpecApplyConfiguration {
	b.Parameters = value
	return b
}

// WithCompositionSelector sets the CompositionSelector field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the CompositionSelector field is set to the value of the last call.
func (b *DigitalTwinPlatformSpecApplyConfiguration) WithCompositionSelector(value *CompositionSelectorApplyConfiguration) *DigitalTwinPlatformSpecApplyConfiguration {
	b.CompositionSelector = value
	return b
}

// WithWriteConnectionSecretToRef sets the WriteConnectionSecretToRef field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the WriteConnectionSecretToRef field is set to the value of the last call.
func (b *DigitalTwinPlatformSpecApplyConfiguration) WithWriteConnectionSecretToRef(value *WriteConnectionSecretToRefApplyConfiguration) *DigitalTwinPlatformSpecApplyConfiguration {
	b.WriteConnectionSecretToRef = value
	return b
}
