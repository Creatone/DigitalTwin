apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: digitaltwinplatform-ionos
  labels:
    crossplane.io/xrd: xdigitaltwinplatform.crossplane.industry-fusion.com
    provider: ionos
spec:
  compositeTypeRef:
    apiVersion: crossplane.industry-fusion.com/v1alpha1
    kind: XDigitalTwinPlatform
  writeConnectionSecretsToNamespace: crossplane-system
  resources:
    - name: dataCenter
      base:
        apiVersion: compute.ionoscloud.crossplane.io/v1alpha1
        kind: Datacenter
        spec:
          forProvider:
            name: dataCenter
            location: de/txl
            description: Digital Twin Platform data center.
          providerConfigRef:
            name: digitaltwin
      patches:
        - fromFieldPath: metadata.name
          toFieldPath: spec.forProvider.name
          transforms:
            - type: string
              string:
                fmt: "digitalTwinPlatform-%s"
    - name: cluster
      base:
        apiVersion: k8s.ionoscloud.crossplane.io/v1alpha1
        kind: Cluster
        spec:
          forProvider:
            name: digitalTwinPlatformCluster
          providerConfigRef:
            name: digitaltwin
      patches:
        - fromFieldPath: spec.writeConnectionSecretToRef.namespace
          toFieldPath: spec.writeConnectionSecretToRef.namespace
        - fromFieldPath: metadata.name
          toFieldPath: spec.writeConnectionSecretToRef.name
          transforms:
            - type: string
              string:
                fmt: "%s-kubeconfig"
        - fromFieldPath: metadata.name
          toFieldPath: spec.forProvider.name
          transforms:
            - type: string
              string:
                fmt: "digitalTwinPlatform-%s"
      connectionDetails:
        - fromConnectionSecretKey: kubeconfig
    - name: lan
      base:
        apiVersion: compute.ionoscloud.crossplane.io/v1alpha1
        kind: Lan
        spec:
          forProvider:
            name: digitalTwinPlatformLan
            public: true
            datacenterConfig:
              datacenterIdRef:
                name: digitalTwinPlatformDataCenter
          providerConfigRef:
            name: digitaltwin
      patches:
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceRefs[0].name
          toFieldPath: spec.forProvider.datacenterConfig.datacenterIdRef.name
        - fromFieldPath: metadata.name
          toFieldPath: spec.forProvider.name
          transforms:
            - type: string
              string:
                fmt: "digitalTwinPlatform-%s"
    - name: k8sNodePool
      base:
        apiVersion: k8s.ionoscloud.crossplane.io/v1alpha1
        kind: NodePool
        spec:
          forProvider:
            name: digitalTwinPlatformK8sNodepool
            nodeCount: 1
            cpuFamily: INTEL_SKYLAKE
            coresCount: 1
            ramSize: 4096
            availabilityZone: AUTO
            storageType: HDD
            storageSize: 100
            datacenterConfig:
              datacenterIdRef:
                name: dataCenter
            clusterConfig:
              clusterIdRef:
                name: cluster
          providerConfigRef:
            name: digitaltwin
      patches:
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceRefs[0].name
          toFieldPath: spec.forProvider.datacenterConfig.datacenterIdRef.name
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceRefs[1].name
          toFieldPath: spec.forProvider.clusterConfig.clusterIdRef.name
        - fromFieldPath: metadata.name
          toFieldPath: spec.forProvider.name
          transforms:
            - type: string
              string:
                fmt: "digitalTwinPlatform-%s"
    - name: helmProviderConfig
      base:
        apiVersion: helm.crossplane.io/v1beta1
        kind: ProviderConfig
        spec:
          credentials:
            source: Secret
            secretRef:
              key: kubeconfig
      patches:
        - fromFieldPath: metadata.name
          toFieldPath: metadata.name
        - fromFieldPath: spec.writeConnectionSecretToRef.namespace
          toFieldPath: spec.credentials.secretRef.namespace
        - fromFieldPath: metadata.name
          toFieldPath: spec.credentials.secretRef.name
          transforms:
            - type: string
              string:
                fmt: "%s-kubeconfig"
      readinessChecks:
        - type: None
    - name: nginxIngressController
      base:
        apiVersion: helm.crossplane.io/v1beta1
        kind: Release
        spec:
          forProvider:
            chart:
              name: ingress-nginx
              repository: https://kubernetes.github.io/ingress-nginx
              version: 4.3.0
            namespace: ingress-nginx
      patches:
        - fromFieldPath: metadata.name
          toFieldPath: spec.providerConfigRef.name
        - fromFieldPath: metadata.name
          toFieldPath: metadata.name
          transforms:
            - type: string
              string:
                fmt: "%s-nginx"
        - fromFieldPath: spec.parameters.services.nginx.version
          toFieldPath: spec.forProvider.chart.version
    - name: strimziKafkaOperator
      base:
        apiVersion: helm.crossplane.io/v1beta1
        kind: Release
        spec:
          forProvider:
            chart:
              url: https://github.com/strimzi/strimzi-kafka-operator/releases/download/0.29.0/strimzi-kafka-operator-helm-3-chart-0.29.0.tgz
            namespace: iff
      patches:
        - fromFieldPath: metadata.name
          toFieldPath: spec.providerConfigRef.name
        - fromFieldPath: metadata.name
          toFieldPath: metadata.name
          transforms:
            - type: string
              string:
                fmt: "%s-kafka"
        - fromFieldPath: spec.parameters.services.kafka.version
          toFieldPath: spec.forProvider.chart.url
          transforms:
            - type: string
              string:
                fmt: "https://github.com/strimzi/strimzi-kafka-operator/releases/download/%[1]s/strimzi-kafka-operator-helm-3-chart-%[1]s.tgz"
    - name: zalandoPostgresOperator
      base:
        apiVersion: helm.crossplane.io/v1beta1
        kind: Release
        spec:
          forProvider:
            chart:
              name: postgres-operator
              repository: https://opensource.zalando.com/postgres-operator/charts/postgres-operator
              version: 1.8.2
            namespace: iff
      patches:
        - fromFieldPath: metadata.name
          toFieldPath: spec.providerConfigRef.name
        - fromFieldPath: metadata.name
          toFieldPath: metadata.name
          transforms:
            - type: string
              string:
                fmt: "%s-postgres"
        - fromFieldPath: spec.parameters.services.postgres.version
          toFieldPath: spec.forProvider.chart.version
    - name: minioOperator
      base:
        apiVersion: helm.crossplane.io/v1beta1
        kind: Release
        spec:
          forProvider:
            chart:
              name: operator
              repository: https://operator.min.io/
              version: 4.5.2
            namespace: minio-operator
      patches:
        - fromFieldPath: metadata.name
          toFieldPath: spec.providerConfigRef.name
        - fromFieldPath: metadata.name
          toFieldPath: metadata.name
          transforms:
            - type: string
              string:
                fmt: "%s-minio"
        - fromFieldPath: spec.parameters.services.minio.version
          toFieldPath: spec.forProvider.chart.version
    - name: certManager
      base:
        apiVersion: helm.crossplane.io/v1beta1
        kind: Release
        spec:
          forProvider:
            chart:
              name: cert-manager
              repository: https://charts.jetstack.io/
              version: v1.10.0
            namespace: operators
            set:
              - name: installCRDs
                value: "true"
      patches:
        - fromFieldPath: metadata.name
          toFieldPath: spec.providerConfigRef.name
        - fromFieldPath: metadata.name
          toFieldPath: metadata.name
          transforms:
            - type: string
              string:
                fmt: "%s-certmanager"
        - fromFieldPath: spec.parameters.services.certmanager.version
          toFieldPath: spec.forProvider.chart.version
    - name: kubernetesProviderConfig
      base:
        apiVersion: kubernetes.crossplane.io/v1alpha1
        kind: ProviderConfig
        spec:
          credentials:
            source: Secret
            secretRef:
              key: kubeconfig
      patches:
        - fromFieldPath: metadata.name
          toFieldPath: metadata.name
        - fromFieldPath: spec.writeConnectionSecretToRef.namespace
          toFieldPath: spec.credentials.secretRef.namespace
        - fromFieldPath: metadata.name
          toFieldPath: spec.credentials.secretRef.name
          transforms:
            - type: string
              string:
                fmt: "%s-kubeconfig"
      readinessChecks:
        - type: None
    - name: beamServiceCRD
      base:
        apiVersion: kubernetes.crossplane.io/v1alpha1
        kind: Object
        spec:
          forProvider:
            manifest:
              apiVersion: apiextensions.k8s.io/v1
              kind: CustomResourceDefinition
              metadata:
                name: beamservices.industry-fusion.com
              spec:
                scope: Namespaced
                group: industry-fusion.com
                versions:
                  - name: v1
                    served: true
                    storage: true
                    schema:
                      openAPIV3Schema:
                        type: object
                        properties:
                          spec:
                            type: object
                            x-kubernetes-preserve-unknown-fields: true
                            required:
                              - entryClass
                              - args
                            properties:
                              entryClass:
                                type: string
                              args:
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              package:
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              tokens:
                                type: array
                                items:
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                          status:
                            type: object
                            x-kubernetes-preserve-unknown-fields: true
                names:
                  kind: BeamService
                  plural: beamservices
                  singular: beamservice
                  shortNames:
                    - bs
      patches:
        - fromFieldPath: metadata.name
          toFieldPath: spec.providerConfigRef.name
        - fromFieldPath: metadata.name
          toFieldPath: metadata.name
          transforms:
            - type: string
              string:
                fmt: "%s-beamservice-crd"
    - name: beamSqlStatementSetCRD
      base:
        apiVersion: kubernetes.crossplane.io/v1alpha1
        kind: Object
        spec:
          forProvider:
            manifest:
              apiVersion: apiextensions.k8s.io/v1
              kind: CustomResourceDefinition
              metadata:
                name: beamsqlstatementsets.industry-fusion.com
              spec:
                scope: Namespaced
                group: industry-fusion.com
                versions:
                  - name: v1alpha1
                    served: true
                    storage: false
                    schema:
                      openAPIV3Schema:
                        type: object
                        properties:
                          spec:
                            type: object
                            required:
                              - sqlstatements
                              - tables
                            properties:
                              sqlstatements:
                                type: array
                                items:
                                  type: string
                              tables:
                                type: array
                                items:
                                  type: string
                          status:
                            type: object
                            x-kubernetes-preserve-unknown-fields: true
                            properties:
                              state:
                                type: string
                              job_id:
                                type: string
                  - name: v1alpha2
                    served: true
                    storage: true
                    schema:
                      openAPIV3Schema:
                        type: object
                        properties:
                          spec:
                            type: object
                            required:
                              - sqlstatements
                              - tables
                            properties:
                              sqlstatements:
                                type: array
                                items:
                                  type: string
                              tables:
                                type: array
                                items:
                                  type: string
                              views:
                                type: array
                                items:
                                  type: string
                              sqlsettings:
                                type: array
                                items:
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                              updateStrategy:
                                type: string
                                enum: [
                                  "none",
                                  "savepoint"
                                ]
                          status:
                            type: object
                            x-kubernetes-preserve-unknown-fields: true
                            properties:
                              state:
                                type: string
                              job_id:
                                type: string
                names:
                  kind: BeamSqlStatementSet
                  plural: beamsqlstatementsets
                  singular: beamsqlstatementset
                  shortNames:
                    - bsqls
      patches:
        - fromFieldPath: metadata.name
          toFieldPath: spec.providerConfigRef.name
        - fromFieldPath: metadata.name
          toFieldPath: metadata.name
          transforms:
            - type: string
              string:
                fmt: "%s-beamsqlstatementset-crd"
    - name: beamSqlTableCRD
      base:
        apiVersion: kubernetes.crossplane.io/v1alpha1
        kind: Object
        spec:
          forProvider:
            manifest:
              apiVersion: apiextensions.k8s.io/v1
              kind: CustomResourceDefinition
              metadata:
                name: beamsqltables.industry-fusion.com
              spec:
                scope: Namespaced
                group: industry-fusion.com
                versions:
                  - name: v1alpha1
                    served: true
                    storage: false
                    schema:
                      openAPIV3Schema:
                        type: object
                        properties:
                          spec:
                            type: object
                            required:
                              - connector
                              - fields
                              - kafka
                              - value
                            properties:
                              connector:
                                type: string
                                enum: [
                                  "kafka",
                                  "upsert-kafka"
                                ]
                              fields:
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              kafka:
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              value:
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              primaryKey:
                                type: array
                                items:
                                  type: string
                  - name: v1alpha2
                    served: true
                    storage: true
                    schema:
                      openAPIV3Schema:
                        type: object
                        properties:
                          spec:
                            type: object
                            required:
                              - name
                              - connector
                              - fields
                              - kafka
                              - value
                            properties:
                              connector:
                                type: string
                                enum: [
                                  "kafka",
                                  "upsert-kafka"
                                ]
                              fields:
                                type: array
                                items:
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                              kafka:
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              value:
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              primaryKey:
                                type: array
                                items:
                                  type: string
                              name:
                                type: string
                names:
                  kind: BeamSqlTable
                  plural: beamsqltables
                  singular: beamsqltable
                  shortNames:
                    - bsqlt
      patches:
        - fromFieldPath: metadata.name
          toFieldPath: spec.providerConfigRef.name
        - fromFieldPath: metadata.name
          toFieldPath: metadata.name
          transforms:
            - type: string
              string:
                fmt: "%s-beamsqltable-crd"
    - name: beamSqlViewCRD
      base:
        apiVersion: kubernetes.crossplane.io/v1alpha1
        kind: Object
        spec:
          forProvider:
            manifest:
              apiVersion: apiextensions.k8s.io/v1
              kind: CustomResourceDefinition
              metadata:
                name: beamsqlviews.industry-fusion.com
              spec:
                scope: Namespaced
                group: industry-fusion.com
                versions:
                  - name: v1alpha1
                    served: true
                    storage: true
                    schema:
                      openAPIV3Schema:
                        type: object
                        properties:
                          spec:
                            type: object
                            required:
                              - name
                              - sqlstatement
                            properties:
                              sqlstatement:
                                type: string
                              name:
                                type: string
                names:
                  kind: BeamSqlView
                  plural: beamsqlviews
                  singular: beamsqlview
                  shortNames:
                    - bsqlv
      patches:
        - fromFieldPath: metadata.name
          toFieldPath: spec.providerConfigRef.name
        - fromFieldPath: metadata.name
          toFieldPath: metadata.name
          transforms:
            - type: string
              string:
                fmt: "%s-beamsqlview-crd"
